# i3 config file (v4)
# https://i3wm.org/docs/userguide.html for a complete reference!

# The Windows button is my modifier key
set $mod Mod4

#  colors 
set $color3    #002b36
set $based2    #073642
set $based1    #586e75
set $based0    #657b83
set $base0     #839496
set $base1     #93a1a1
set $base2     #eee8d5
set $base3     #fdf6e3

set $white     #f8f8ff
set $black     #313639
set $grey      #808080
set $yellow    #b58900
set $orange    #cb4b16
set $red       #ff0000
set $magenta   #d33682
set $violet    #6c71c4
set $blue      #268bd2
set $cyan      #2aa198
set $green     #008000

# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #ffffff
client.focused_inactive #333333 #5f676a #ffffff #484e50   #ffffff
client.unfocused        #333333 #222222 #888888 #292d2e   #ffffff
client.urgent           #2f343a #900000 #ffffff #900000   #ffafcc
client.placeholder      #000000 #0c0c0c #ffffff #000000   #ffffff
client.background       #ffffff

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
font pango:IBM Plex Sans SemiBold 8

# start Rofi 
bindsym $mod+d exec --no-startup-id rofi -show drun -show-icons
bindsym $mod+Shift+d exec --no-startup-id rofi -show run # This makes it easier to see the "real" name of programs.
bindsym $mod+x exec --no-startup-id rofi -show window

# Start Notification Daemon
exec_always --no-startup-id deadd-notification-center

# shortcut to view notification center panel
bindsym $mod+n exec kill -s USR1 $(pidof deadd-notification-center)

# Set Wallpaper
exec_always --no-startup-id feh --bg-fill --randomize ~/Pictures/Backgrounds/*

# my series of start-up programs
exec --no-startup-id dropbox start
exec --no-startup-id indicator-bulletin

# My custom shortcuts
bindsym $mod+m exec --no-startup-id fava ~/Dropbox/SecondBrain/Finance/data.beancount --port 5001
# bindsym $mod+Shift+m exec cd todoist-habitica-sync/ && docker run --detach --pull always --rm --name todoist-habitica-sync --env-file=.env -v $(pwd)/.sync_cache:/usr/src/.sync_cache radeklat/todoist-habitica-sync:latest

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock --i3lock --nofork

# bindsym Control+$mod+l exec i3lock -c "$color3"
# i3lock only supports .png, but you can get around this by checking the docs 
# bindsym Control+$mod+l exec --no-startup-id i3lock -b -f -i ~/Pictures/lockscreen/cosmic_cliffs.png
bindsym Control+$mod+l exec --no-startup-id i3lock -b -f -e -c 000000
bindsym Control+$mod+s exec --no-startup-id i3lock -b -c 000000 &&  systemctl suspend

# NetworkManager is the most popular way to manage wireless networks on Linux, and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Start PICOM
exec_always --no-startup-id picom -b
# exec_always --no-startup-id picom -bcf -e 0.3 -o 0.4 --corner-radius 3 --no-fading-openclose --backend xrender --vsync --show-all-errors —experimental-backends

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# set initial brightness
exec xrandr --output eDP-1 --brightness 1
# Screen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id  "xrandr --output eDP-1 --brightness 0.7; notify-send 'high brightness'"
bindsym XF86MonBrightnessDown exec --no-startup-id  "xrandr --output eDP-1 --brightness 0.3; notify-send 'low brightness'"

# Get key indicators
set $caps_status xset -q | sed -n 's/^.*Caps Lock:\s*\(\S*\).*$/\1/p'
set $num_status xset -q | sed -n 's/^.*Num Lock:\s*\(\S*\).*$/\1/p'
set $scroll_status xset -q | sed -n 's/^.*Scroll Lock:\s*\(\S*\).*$/\1/p'

# bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
bindsym --release Caps_Lock exec notify-send "Caps Lock $(eval $caps_status)"
exec --no-startup-id numlockx on
bindsym --release Num_Lock exec notify-send "Num Lock $(eval $num_status)"
bindsym --release Scroll_Lock exec notify-send "Scroll Lock $(eval $scroll_status)"

# start a terminal
bindsym $mod+Return exec kitty

# Screenshot
bindsym --release Print exec scrot $HOME/Screenshots/`date +%Y-%m-%d_%H:%M:%S`.png | notify-send "Screenshot taken"

# kill focused window
bindsym $mod+q kill

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation/vertical orientation
bindsym $mod+h split h
bindsym $mod+v split v
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:  General"
set $ws2 "2:  Work"
set $ws3 "3:  Code"
set $ws4 "4:  Media"
set $ws5 "5:  Files"
set $ws6 "6:  Email"
set $ws7 "7: Obsidian"
set $ws8 "8: Misc"
set $ws9 "9: "
set $ws10 "10: "

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
workspace_auto_back_and_forth yes
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# next/previous workspace
# bindsym $mod+Tab       workspace back_and_forth
bindsym $mod+Tab         workspace next
bindsym $mod+Shift+Tab   workspace prev

# automatically start programs in specific workspaces on login
exec --no-startup-id i3-msg "workspace $ws1; exec /usr/bin/firefox"
exec --no-startup-id i3-msg "workspace $ws2; exec /usr/bin/slack %U -u"
# exec --no-startup-id i3-msg "workspace $ws6; exec /usr/bin/thunderbird"

# Assign Workspace
assign [class="firefox"] $ws1

assign [class="slack"] $ws2

assign [class="code"] $ws3

assign [class="podcasts"] $ws4
assign [class="strawberry"] $ws4

assign [class="thunderbird"] $ws6

assign [class="obsidian"] $ws7

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+c restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# refresh bash
bindsym $mod+Ctrl+e exec "source ~/.bashrc"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Press $mod+o followed by either f, t, Escape or Return to launch firefox,
# thunderbird or return to the default mode, respectively.
set $mode_launcher Launch: [f]irefox [t]hunderbird
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym f exec firefox
    bindsym t exec thunderbird

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# i3gaps
for_window [class=".*"] border pixel 8
for_window [class="*"] title_window_icon on
gaps inner 15
gaps outer 5
smart_borders on
smart_gaps on

focus_follows_mouse yes
# for_window [class=".*"] floating enable

title_align center
hide_edge_borders smart
popup_during_fullscreen smart

#  I tried out polybar once.
# exec --no-startup-id ~/.config/polybar/launch.sh --stardust

bar {
        
        status_command exec /usr/bin/bash -i ~/.config/i3/i3status.sh
        position top
        mode dock
        hidden_state hide
        modifier Mod1
        position top
        tray_output primary
        strip_workspace_numbers no
        separator_symbol " "
        workspace_min_width 40
        colors {
            background $white
            statusline $black

            # class             border  backgr. text    
            focused_workspace   $white $white $blue
            inactive_workspace  $white $white $grey
            urgent_workspace    $white $white $red
            binding_mode        $red $white $red
        }
}

bar {
    status_command exec /usr/bin/bash -i ~/.config/i3/i3status_bottom.sh
    position bottom
    tray_output none
    workspace_buttons no
    colors {
            background $white
            statusline $grey
        }
}

# bar {
#     status_command i3blocks
#     position bottom
# }
